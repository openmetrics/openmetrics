<ul class="test_plan">
  <% tp.test_items.each_with_index do |te_item, n| %>
      <hr>
      <li>
        <span class="item-number"><%= n+1 %></span>
        <span class="label label-primary"><%= te_item.type %></span>
        <span class="label label-info"><%= te_item.format %></span>
        <%= link_to te_item.name, te_item %>

        <div class="pull-right">
            <%# is there already an exitstatus available? %>
            <% if te.test_execution_items[n] and te.test_execution_items[n].exitstatus.is_a? Integer and te.test_execution_items[n].exitstatus > 0 %>
                <%= '<span class="label label-danger">Fail</span>'.html_safe %>
                <!--<div class="text-center"><i class="fa fa-arrow-up"></i></div>-->
            <% elsif te.test_execution_items[n] and te.test_execution_items[n].exitstatus.is_a? Integer and te.test_execution_items[n].exitstatus == 0 %>
                <%= '<span class="label label-success">Pass</span>'.html_safe %>
            <% else %>
                <%= '<span class="label label-default">not yet processed</span>'.html_safe %>
            <% end %>

            <%# if already processed show execution time %>
            <% if te.test_execution_items[n] and !te.test_execution_items[n].duration.nil? %>
                <%= "<span class=\"duration\">#{te.test_execution_items[n].duration.to_s} s</span>".html_safe %>
            <% end %>
        </div>

        <!--generate a list of stdout, stderr and the markup (-file) -->
        <% if te.test_execution_items[n] %>
            <ul class="items fa-ul">

              <!-- quality criteria -->
              <li class="quality spacer collapse"><i class="fa-li fa fa-tachometer"></i>
                Quality
                <%= render 'shared/quality', item: te.test_execution_items[n] %>
              </li>

              <%# display origin TestItem markup %>
              <li class="markup_raw spacer collapse"><i class="fa-li fa fa-code"></i>
                Markup
                <%= coderay(te_item.markup, te_item.format, "div") %>
              </li>

              <%# display matching TestExecutionItem markup %>
              <li class="markup spacer collapse"><i class="fa-li fa fa-file-code-o"></i>
                <span title="<%= te.test_execution_items[n].executable %>"><%= File.basename(te.test_execution_items[n].executable) %></span>
                <%= coderay(te.test_execution_items[n].markup, te.test_execution_items[n].format, "div") %>
              </li>

              <!--in case of success show the output-->
              <li class="stdout spacer collapse"><i class="fa-li fa fa-sign-out"></i>
                STDOUT
                <%= te.test_execution_items[n] and te.test_execution_items[n].output.nil? ? coderay("empty", "plain", "div") : coderay(te.test_execution_items[n].output, "plain", "div") %>
              </li>

              <!--in case of failure show the error message-->
              <li class="stderr spacer collapse"><i class="fa-li fa fa-bug"></i>
                STDERR
                <%= te.test_execution_items[n] and te.test_execution_items[n].error.nil? ? coderay("empty", "plain", "div") : coderay(te.test_execution_items[n].error, te.test_execution_items[n].format, "div") %>
              </li>

            </ul>
        <% end %>

      </li>
  <% end %>
</ul>